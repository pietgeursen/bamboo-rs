# Based on the "trust" template v0.1.2
# https://github.com/japaric/trust/tree/v0.1.2

dist: trusty
language: rust
services: docker
sudo: required

env:
  global:
    - CRATE_NAME=bamboo-rs

matrix:
  include:
    # Android
    - env: TARGET=aarch64-linux-android DISABLE_TESTS=1
      rust: stable
    - env: TARGET=arm-linux-androideabi DISABLE_TESTS=1
      rust: stable
    - env: TARGET=armv7-linux-androideabi DISABLE_TESTS=1
      rust: stable
    - env: TARGET=i686-linux-android DISABLE_TESTS=1
      rust: stable
    - env: TARGET=x86_64-linux-android DISABLE_TESTS=1
      rust: stable

    # iOS
    - env: TARGET=aarch64-apple-ios DISABLE_TESTS=1
      rust: stable
      os: osx
    - env: TARGET=x86_64-apple-ios DISABLE_TESTS=1
      rust: stable
      os: osx

    # Linux
    - env: TARGET=aarch64-unknown-linux-gnu
      rust: stable
    - env: TARGET=arm-unknown-linux-gnueabi
      rust: stable
    - env: TARGET=armv7-unknown-linux-gnueabihf
      rust: stable
    - env: TARGET=i686-unknown-linux-gnu
      rust: stable
    - env: TARGET=i686-unknown-linux-musl
      rust: stable
    - env: TARGET=mips-unknown-linux-gnu
      rust: stable
    - env: TARGET=mips64-unknown-linux-gnuabi64
      rust: stable
    - env: TARGET=mips64el-unknown-linux-gnuabi64
      rust: stable
    - env: TARGET=mipsel-unknown-linux-gnu
      rust: stable
    - env: TARGET=powerpc-unknown-linux-gnu
      rust: stable

      # Linking seems to break
      #- env: TARGET=powerpc64-unknown-linux-gnu
      #rust: stable
      
    - env: TARGET=powerpc64le-unknown-linux-gnu
      rust: stable
    - env: TARGET=s390x-unknown-linux-gnu DISABLE_TESTS=1
      rust: stable
    - env: TARGET=x86_64-unknown-linux-gnu
      rust: stable
    - env: TARGET=x86_64-unknown-linux-musl
      rust: stable

    # OSX
    
    # Fails with target not installed.
    #- env: TARGET=i686-apple-darwin
    #  rust: stable
    #  os: osx

    - env: TARGET=x86_64-apple-darwin
      rust: stable
      os: osx

    # *BSD
    # - env: TARGET=i686-unknown-freebsd DISABLE_TESTS=1
    #  rust: stable
    #- env: TARGET=x86_64-unknown-freebsd DISABLE_TESTS=1
    #  rust: stable
    - env: TARGET=x86_64-unknown-netbsd DISABLE_TESTS=1
      rust: stable

    # Windows
    - env: TARGET=x86_64-pc-windows-gnu
      rust: stable

    # Bare metal
    # These targets don't support std and as such are likely not suitable for
    # most crates.
    - env: TARGET=thumbv6m-none-eabi IS_NO_STD=1
      rust: stable
    - env: TARGET=thumbv7em-none-eabi IS_NO_STD=1
      rust: stable
    - env: TARGET=thumbv7em-none-eabihf IS_NO_STD=1
      rust: stable
    - env: TARGET=thumbv7m-none-eabi IS_NO_STD=1
      rust: stable
    #
    #    # Testing other channels
    #    - env: TARGET=x86_64-unknown-linux-gnu
    #      rust: stable
    #    - env: TARGET=x86_64-apple-darwin
    #      os: osx
    #      rust: stable

before_install:
  - set -e
  - rustup self update

install:
  - sh ci/install.sh
  - source ~/.cargo/env || true

script:
  - bash ci/script.sh

after_script: set +e

before_deploy:
  - sh ci/before_deploy.sh

deploy:
  file_glob: true
  file: $CRATE_NAME-$TRAVIS_TAG-$TARGET.*
  on:
    condition: $TRAVIS_RUST_VERSION = stable
    tags: true
  provider: releases
  skip_cleanup: true
  edge: true

cache: cargo
before_cache:
  # Travis can't cache files that are not readable by "others"
  - chmod -R a+r $HOME/.cargo

branches:
  only:
    # release tags
    - /^v\d+\.\d+\.\d+.*$/
    - master

notifications:
  email:
    on_success: never
